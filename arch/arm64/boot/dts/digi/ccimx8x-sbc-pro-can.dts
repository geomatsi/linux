/*
 * Copyright 2018-2020 Digi International Inc.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/dts-v1/;

/* i.MX8QXP CPU */
#include "../freescale/imx8qxp.dtsi"
/* Digi ConnectCore 8X */
//#include "ccimx8x.dtsi"
/* Digi ConnectCore 8X SBC Pro */
//#include "ccimx8x-sbc-pro.dtsi"

/ {
	model = "Digi International ConnectCore 8X SBC Pro";
	compatible = "digi,ccimx8x-sbc-pro", "digi,ccimx8x", "fsl,imx8qxp";
	digi,machine,name = "ccimx8x-sbc-pro-can";

	chosen {
		stdout-path = &lpuart2;
	};

        memory@80000000 {
                device_type = "memory";
                reg = <0x00000000 0x80000000 0 0x80000000>;
        };

        reserved-memory {
                vdev0vring0: vdev0vring0@90000000 {
                        compatible = "shared-dma-pool";
                        reg = <0 0x90000000 0 0x8000>;
                        no-map;
                };

                vdev0vring1: vdev0vring1@90008000 {
                        compatible = "shared-dma-pool";
                        reg = <0 0x90008000 0 0x8000>;
                        no-map;
                };

                vdevbuffer: vdevbuffer {
                        compatible = "shared-dma-pool";
                        reg = <0 0x90010000 0 0x40000>;
                        no-map;
                };
        };

        imx8x_cm4: imx8x_cm4@0 {
                compatible = "fsl,imx8qxp-cm4";
                mbox-names = "tx", "rx", "txdb", "rxdb";
                mboxes = <&lsio_mu5 0 1
                          &lsio_mu5 1 1
                          &lsio_mu5 2 1
                          &lsio_mu5 3 1>;
                mub-partition = <3>;
                memory-region = <&vdev0vring0>, <&vdev0vring1>, <&vdevbuffer>;
                core-index = <0>;
                core-id = <IMX_SC_R_M4_0_PID0>;
                power-domains = <&pd IMX_SC_R_M4_0_PID0>,
                                <&pd IMX_SC_R_M4_0_MU_1A>;
                status = "okay";
        };

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3v3: regulator-som@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
		};

		reg_1v8_adc_vref: regulator-som@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "1v8_adc_vref";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		reg_1v8: regulator-som@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		reg_3v3_ext: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "3v3_ext";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&mca_gpio 5 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&reg_3v3>;
			regulator-boot-on;
		};

		reg_1v8_ext: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "1v8_ext";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			gpio = <&mca_gpio 6 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			vin-supply = <&reg_1v8>;
			regulator-boot-on;
		};

		reg_3v3_eth0: regulator@3 {
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&pinctrl_reg_3v3_eth0>;
			pinctrl-1 = <&pinctrl_reg_3v3_eth0_sleep>;
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "3v3_eth0";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&lsio_gpio3 13 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			startup-delay-us = <10000>;
			vin-supply = <&reg_3v3_ext>;
		};

		reg_5v_display: regulator@4 {
			compatible = "regulator-fixed";
			reg = <4>;
			pinctrl-names = "default", "sleep";
			pinctrl-0 = <&pinctrl_reg_5v_display>;
			pinctrl-1 = <&pinctrl_reg_5v_display_sleep>;
			regulator-name = "5v_display";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&lsio_gpio0 13 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		/* Dummy regulator to keep PMIC powered via asserted MCA_IO9 */
		pmic_pwrdn: regulator@9 {
			compatible = "regulator-fixed";
			reg = <9>;
			regulator-name = "pmic-pwrdn";
			gpio = <&mca_gpio 9 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			regulator-always-on;
		};
	};

	pf8x00-sc {
		compatible = "digi,pf8x00-sc";

		vcc_main1_reg: SW1 {
			regulator-min-microvolt = <1000000>;
			regulator-max-microvolt = <1000000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
				regulator-suspend-microvolt = <800000>;
			};
		};

		vcc_main2_reg: SW2 {
			regulator-min-microvolt = <1000000>;
			regulator-max-microvolt = <1000000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
				regulator-suspend-microvolt = <800000>;
			};
		};

		vcc_gpu_reg: SW3 {
			regulator-min-microvolt = <1100000>;
			regulator-max-microvolt = <1100000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-off-in-suspend;
			};
		};

		vcc_cpu_reg: SW4 {
			regulator-min-microvolt = <1100000>;
			regulator-max-microvolt = <1100000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-off-in-suspend;
			};
		};

		vcc_ddr_io_reg: SW5 {
			regulator-min-microvolt = <1100000>;
			regulator-max-microvolt = <1100000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-on-in-suspend;
				regulator-suspend-microvolt = <1068750>;
			};
		};

		vcc_1v8_reg: SW6 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vcc_3v3_reg: SW7 {
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-off-in-suspend;
			};
		};

		vcc_scu_1v8_reg: LDO1 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd_emmc_reg: LDO2 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
			regulator-state-mem {
				regulator-off-in-suspend;
			};
		};

		ldo3_reg: LDO3 {
			regulator-min-microvolt = <1500000>;
			regulator-max-microvolt = <5000000>;
		};

		ld4_reg: LDO4 {
			regulator-min-microvolt = <1500000>;
			regulator-max-microvolt = <5000000>;
		};
	};

};

&rpmsg{
	status = "disabled";
};

&fec1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_fec_mdio>,
		    <&pinctrl_fec1_gpio>,
		    <&pinctrl_fec1>;
	pinctrl-1 = <&pinctrl_fec1_gpio_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy1>;
	digi,mdio-lt-supply = <&reg_1v8_ext>;
	phy-supply = <&reg_3v3_eth0>;
	phy-reset-gpios = <&lsio_gpio3 18 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <1>;
	digi,phy-reset-in-suspend;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
		};

		ethphy1: ethernet-phy@1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <1>;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
		};
	};
};

&fec2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_fec2_gpio>,
		    <&pinctrl_fec2>;
	pinctrl-1 = <&pinctrl_fec2_gpio_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	digi,mdio-lt-supply = <&reg_1v8_ext>;
	phy-supply = <&reg_3v3_eth0>;
	phy-reset-gpios = <&lsio_gpio3 22 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <1>;
	digi,phy-reset-in-suspend;
	fsl,magic-packet;
	status = "okay";
};

/*
 * CAN0
 * Conflicts with LPUART0 RTS/CTS lines.
 * Before enabling the port you need to configure
 * lpuart0 node as 2 wires.
 */
&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_5v_display>;
	status = "okay";
};

/* CAN1 on expansion header */
&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&reg_5v_display>;
	stby-gpios = <&lsio_gpio1 0 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

/*
 * CAN2 on expansion header.
 * Conflicts with LPUART3 RX/TX lines.
 * Requires signal CAN/RS485# (GPIO3_IO23) to be driven high
 */
&flexcan3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan3>,
		    <&pinctrl_flexcan3_lpuart3_gpios>;
	xceiver-supply = <&reg_5v_display>;
	stby-gpios = <&lsio_gpio1 2 GPIO_ACTIVE_HIGH>;
	pinctrl-assert-gpios = <&lsio_gpio3 23 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&cm40_intmux {
	status = "okay";
};

&cm40_lpuart {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_cm40_lpuart>;
        status = "okay";
};

/* LPSPI0 on expansion header */
&lpspi0 {
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpspi0>;
	status = "okay";
};

/* LPUART0 on expansion header */
&lpuart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart0_2wires>;
	status = "okay";
};

/* Console */
&lpuart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart2>;
	status = "okay";
};

/*
 * LPUART3 on expansion header.
 * Conflicts with CAN2.
 */
&lpuart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpuart3>,
		    <&pinctrl_flexcan3_lpuart3_gpios>;
	pinctrl-assert-gpios = <&lsio_gpio3 23 GPIO_ACTIVE_LOW>;
	/* Enable RS485 mode */
	linux,rs485-enabled-at-boot-time;
	digi,rts-gpio = <&lsio_gpio3 24 GPIO_ACTIVE_HIGH>;
	status = "disabled";
};


/* I2C0 connected to MCA and crypto chip */
&i2c0 {
	#address-cells = <1>;
	#size-cells = <0>;
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	digi,hold-time-ns = <8000>;
	digi,buffer-time-us = <35>;
	pinctrl-0 = <&pinctrl_lpi2c0>;
	pinctrl-1 = <&pinctrl_lpi2c0_gpio>;
	scl-gpios = <&lsio_gpio3 8 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&lsio_gpio3 7 GPIO_ACTIVE_HIGH>;
	status = "okay";

	mca_cc8x: mca@63 {
		compatible = "digi,mca-cc8x";
		reg = <0x63>;
		interrupt-parent = <&gic>;
		interrupts = <GIC_SPI 177 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;
		fw-update-gpio = <&lsio_gpio3 9 GPIO_ACTIVE_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mca_cc8x>;

		mca_adc: adc {
			compatible = "digi,mca-cc8x-adc";
			digi,adc-vref = <3000000>;
		};

		mca_gpio: gpio {
			compatible = "digi,mca-cc8x-gpio";
			gpio-controller;
			#gpio-cells = <2>;

			interrupt-parent = <&mca_cc8x>;
			interrupt-controller;
			#interrupt-cells = <2>;

			/* Disable all mca GPIOs as power off wake up sources */
			pwroff-wakeup-capable-ios = <>;
		};

		pwrkey {
			compatible = "digi,mca-cc8x-pwrkey";
			digi,key-power;
			digi,key-power-up;
			digi,key-sleep;
			digi,debounce-ms = <100>;
			digi,pwroff-delay-sec = <6>;
			digi,pwroff-guard-sec = <30>;
		};

		rtc {
			compatible = "digi,mca-cc8x-rtc";
		};

		wdt {
			compatible = "digi,mca-cc8x-wdt";
			digi,full-reset;
		};

		pwms {
			compatible = "digi,mca-pwm";
			#address-cells = <1>;
			#size-cells = <0>;

			mca_pwm0: pwm@0 {
				reg = <0>;
				pwm-channels = <6>;
				#pwm-cells = <3>;
			};

			mca_pwm1: pwm@1 {
				reg = <1>;
				pwm-channels = <2>;
				#pwm-cells = <3>;
			};

			mca_pwm2: pwm@2 {
				reg = <2>;
				pwm-channels = <2>;
				#pwm-cells = <3>;
			};
		};

		mca_tamper: tamper {
			compatible = "digi,mca-cc8x-tamper";
		};

		mca_uart: uart {
			compatible = "digi,mca-cc8x-uart";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "disabled";

			mca_uart0: serial@0x900 {
				reg = <0x900>;
				index = <0>;
				status = "disabled";
			};

			mca_uart1: serial@0x920 {
				reg = <0x920>;
				index = <1>;
				status = "disabled";
			};

			mca_uart2: serial@0x940 {
				reg = <0x940>;
				index = <2>;
				status = "disabled";
			};
		};

		mca_keypad: keypad {
			compatible = "digi,mca-keypad";
			status = "disabled";
		};

		mca_led: led {
			compatible = "digi,mca-led";
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			led@0 {
				reg = <0>;
				label = "power:green";
				io = <13>;
				linux,default-trigger = "default-on";
				retain-state-suspended;
			};
		};
	};
};

/* Micro SD card */
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	no-1-8-v;
	cd-gpios = <&lsio_gpio4 22 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

/* IOMUX */
&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_expansion>;

	/* Expansion Connector */
	pinctrl_expansion: expansiongrp {
		fsl,pins = <
			/*
			 * Comment the pads you wish to use on any
			 * device driver, and uncomment the ones you
			 * want to use as GPIO (requires disabling the
			 * driver that manages them).
			 */
			/* GPIO4_20 */
			IMX8QXP_USDHC1_VSELECT_LSIO_GPIO4_IO20		0x06000020
			/* GPIO4_21 */
			IMX8QXP_USDHC1_WP_LSIO_GPIO4_IO21			0x06000020
			/* SPI0_IRQ_N */
			IMX8QXP_SPI2_SDO_LSIO_GPIO1_IO01			0x06000020
			/* EXP_I2C_IRQ_N */
			IMX8QXP_QSPI0A_SS1_B_LSIO_GPIO3_IO15		0x06000020
			/* EXP_I2C_GPIO */
			IMX8QXP_QSPI0A_SS0_B_LSIO_GPIO3_IO14		0x06000020
			/* GPIO4_19 */
			IMX8QXP_USDHC1_RESET_B_LSIO_GPIO4_IO19		0x06000020
			/* GPIO0_12 */
			IMX8QXP_SPDIF0_EXT_CLK_LSIO_GPIO0_IO12		0x06000020
			/* GPIO5_09 */
			IMX8QXP_ENET0_REFCLK_125M_25M_LSIO_GPIO5_IO09	0x06000020

			/* Remove the pads you wish to use as ADCs */
			/* ADC_IN0 */
	//		IMX8QXP_ADC_IN0_LSIO_GPIO1_IO10			0x06000020
			/* ADC_IN1 */
			IMX8QXP_ADC_IN1_LSIO_GPIO1_IO09			0x06000020
			/* M40_UART_RX */
			IMX8QXP_ADC_IN2_LSIO_GPIO1_IO12			0x06000020
			/* M40_UART_TX */
			IMX8QXP_ADC_IN3_LSIO_GPIO1_IO11			0x06000020
			/* ADC_IN4 */
			IMX8QXP_ADC_IN4_LSIO_GPIO1_IO14			0x06000020
			/* ADC_IN5 */
			IMX8QXP_ADC_IN5_LSIO_GPIO1_IO13			0x06000020
		>;
	};

	/* Uncomment the pads you wish to use as ADCs */
	pinctrl_adc0: adc0grp {
		fsl,pins = <
			/* ADC_IN0 */
			IMX8QXP_ADC_IN0_ADMA_ADC_IN0		0xc0000060
	//		/* ADC_IN1 */
	//		IMX8QXP_ADC_IN1_ADMA_ADC_IN1		0xc0000060
	//		/* M40_UART_RX */
	//		IMX8QXP_ADC_IN2_ADMA_ADC_IN2		0xc0000060
	//		/* M40_UART_TX */
	//		IMX8QXP_ADC_IN3_ADMA_ADC_IN3		0xc0000060
	//		/* ADC_IN4 */
	//		IMX8QXP_ADC_IN4_ADMA_ADC_IN4		0xc0000060
	//		/* ADC_IN5 */
	//		IMX8QXP_ADC_IN5_ADMA_ADC_IN5		0xc0000060
		>;
	};

	pinctrl_lpspi0: lpspi0grp {
		fsl,pins = <
			IMX8QXP_SPI0_SCK_ADMA_SPI0_SCK	0x0600004c
			IMX8QXP_SPI0_SDO_ADMA_SPI0_SDO	0x0600004c
			IMX8QXP_SPI0_SDI_ADMA_SPI0_SDI	0x0600004c
			IMX8QXP_SPI0_CS0_ADMA_SPI0_CS0	0x0600004c
			IMX8QXP_SPI0_CS1_ADMA_SPI0_CS1	0x0600004c
		>;
	};

	pinctrl_lpuart0_2wires: lpuart0grp_2wires {
		fsl,pins = <
			IMX8QXP_UART0_RX_ADMA_UART0_RX		0x06000020
			IMX8QXP_UART0_TX_ADMA_UART0_TX		0x06000020
		>;
	};

	pinctrl_lpuart0_4wires: lpuart0grp_4wires {
		fsl,pins = <
			IMX8QXP_UART0_RX_ADMA_UART0_RX		0x06000020
			IMX8QXP_UART0_TX_ADMA_UART0_TX		0x06000020
			IMX8QXP_FLEXCAN0_RX_ADMA_UART0_RTS_B	0x06000020
			IMX8QXP_FLEXCAN0_TX_ADMA_UART0_CTS_B	0x06000020
		>;
	};

	pinctrl_lpuart2: lpuart2grp {
		fsl,pins = <
			IMX8QXP_UART2_TX_ADMA_UART2_TX	0x06000020
			IMX8QXP_UART2_RX_ADMA_UART2_RX	0x06000020
		>;
	};

	pinctrl_lpuart3: lpuart3grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN2_TX_ADMA_UART3_TX		0x06000020
			IMX8QXP_FLEXCAN2_RX_ADMA_UART3_RX		0x06000020
			/* RS485 RE#/DE line */
			IMX8QXP_QSPI0B_SS1_B_LSIO_GPIO3_IO24	0x06000040
		>;
	};

	pinctrl_flexcan1: flexcan0grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN0_TX_ADMA_FLEXCAN0_TX		0x21
			IMX8QXP_FLEXCAN0_RX_ADMA_FLEXCAN0_RX		0x21
		>;
	};

	pinctrl_flexcan2: flexcan1grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN1_TX_ADMA_FLEXCAN1_TX		0x21
			IMX8QXP_FLEXCAN1_RX_ADMA_FLEXCAN1_RX		0x21
			IMX8QXP_SPI2_CS0_LSIO_GPIO1_IO00                   0x06000020
		>;
	};

	pinctrl_flexcan3: flexcan2grp {
		fsl,pins = <
			IMX8QXP_FLEXCAN2_TX_ADMA_FLEXCAN2_TX		0x21
			IMX8QXP_FLEXCAN2_RX_ADMA_FLEXCAN2_RX		0x21
			IMX8QXP_SPI2_SDI_LSIO_GPIO1_IO02                   0x06000020
		>;
	};

	pinctrl_flexcan3_lpuart3_gpios: flexcan2lpuart3gpios-grp {
		fsl,pins = <
			IMX8QXP_QSPI0B_SS0_B_LSIO_GPIO3_IO23 0x06000060
		>;
	};

	/* FEC shared MDIO bus */
	pinctrl_fec_mdio: fecmdiogrp {
		fsl,pins = <
			IMX8QXP_ENET0_MDC_CONN_ENET0_MDC		0x06000020
			IMX8QXP_ENET0_MDIO_CONN_ENET0_MDIO		0x06000020
		>;
	};

	pinctrl_fec1_gpio: fec1gpiogrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DATA0_LSIO_GPIO3_IO18	0x06000021
			/* PHY interrupt */
			IMX8QXP_MIPI_DSI0_GPIO0_01_LSIO_GPIO1_IO28	0x06000021
		>;
	};

	pinctrl_fec1_gpio_sleep: fec1gpiosleepgrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DATA0_LSIO_GPIO3_IO18	0x06000041
		>;
	};

	pinctrl_fec1: fec1grp {
		fsl,pins = <
			/*
			 * The SCFW of B0 defaults ENET0 domains to 2.5V:
			 * - VDD_ENET0_1P8_2P5_3P3
			 * - VDD_ENET0_VSELECT_1P8_2P5_3P3
			 * Turn the domains back to 1.8/3.3V detector
			 */
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB0_PAD	0x000014a0
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB1_PAD	0x000014a0

			IMX8QXP_ENET0_RGMII_TX_CTL_CONN_ENET0_RGMII_TX_CTL	0x00000061
			IMX8QXP_ENET0_RGMII_TXC_CONN_ENET0_RGMII_TXC	0x00000061
			IMX8QXP_ENET0_RGMII_TXD0_CONN_ENET0_RGMII_TXD0	0x00000061
			IMX8QXP_ENET0_RGMII_TXD1_CONN_ENET0_RGMII_TXD1	0x00000061
			IMX8QXP_ENET0_RGMII_TXD2_CONN_ENET0_RGMII_TXD2	0x00000061
			IMX8QXP_ENET0_RGMII_TXD3_CONN_ENET0_RGMII_TXD3	0x00000061
			IMX8QXP_ENET0_RGMII_RXC_CONN_ENET0_RGMII_RXC	0x00000061
			IMX8QXP_ENET0_RGMII_RX_CTL_CONN_ENET0_RGMII_RX_CTL	0x00000061
			IMX8QXP_ENET0_RGMII_RXD0_CONN_ENET0_RGMII_RXD0	0x00000061
			IMX8QXP_ENET0_RGMII_RXD1_CONN_ENET0_RGMII_RXD1	0x00000061
			IMX8QXP_ENET0_RGMII_RXD2_CONN_ENET0_RGMII_RXD2	0x00000061
			IMX8QXP_ENET0_RGMII_RXD3_CONN_ENET0_RGMII_RXD3	0x00000061
		>;
	};

	pinctrl_fec2_gpio: fec2gpiogrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DQS_LSIO_GPIO3_IO22		0x06000021
			/* PHY interrupt */
			IMX8QXP_MIPI_DSI1_GPIO0_01_LSIO_GPIO2_IO00	0x06000021
		>;
	};

	pinctrl_fec2_gpio_sleep: fec2gpiosleepgrp {
		fsl,pins = <
			/* PHY reset */
			IMX8QXP_QSPI0B_DQS_LSIO_GPIO3_IO22		0x06000041
		>;
	};

	pinctrl_fec2: fec2grp {
		fsl,pins = <
			/*
			 * The SCFW of B0 defaults ENET1 domain to 2.5V:
			 * - VDD_ESAI_SPDIF_1P8_2P5_3P3
			 * Turn the domain back to 1.8/3.3V detector
			 */
			IMX8QXP_COMP_CTL_GPIO_1V8_3V3_GPIORHB_PAD		0x000514a0

			IMX8QXP_ESAI0_SCKR_CONN_ENET1_RGMII_TX_CTL		0x00000060
			IMX8QXP_ESAI0_FSR_CONN_ENET1_RGMII_TXC		0x00000060
			IMX8QXP_ESAI0_TX4_RX1_CONN_ENET1_RGMII_TXD0	0x00000060
			IMX8QXP_ESAI0_TX5_RX0_CONN_ENET1_RGMII_TXD1	0x00000060
			IMX8QXP_ESAI0_FST_CONN_ENET1_RGMII_TXD2		0x00000060
			IMX8QXP_ESAI0_SCKT_CONN_ENET1_RGMII_TXD3		0x00000060
			IMX8QXP_ESAI0_TX0_CONN_ENET1_RGMII_RXC		0x00000060
			IMX8QXP_SPDIF0_TX_CONN_ENET1_RGMII_RX_CTL		0x00000060
			IMX8QXP_SPDIF0_RX_CONN_ENET1_RGMII_RXD0		0x00000060
			IMX8QXP_ESAI0_TX3_RX2_CONN_ENET1_RGMII_RXD1	0x00000060
			IMX8QXP_ESAI0_TX2_RX3_CONN_ENET1_RGMII_RXD2	0x00000060
			IMX8QXP_ESAI0_TX1_CONN_ENET1_RGMII_RXD3		0x00000060
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2gpiogrp {
		fsl,pins = <
			/* Card detect */
			IMX8QXP_USDHC1_CD_B_LSIO_GPIO4_IO22	0x06000021
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			IMX8QXP_USDHC1_CLK_CONN_USDHC1_CLK		0x06000041
			IMX8QXP_USDHC1_CMD_CONN_USDHC1_CMD		0x00000021
			IMX8QXP_USDHC1_DATA0_CONN_USDHC1_DATA0	0x00000021
			IMX8QXP_USDHC1_DATA1_CONN_USDHC1_DATA1	0x00000021
			IMX8QXP_USDHC1_DATA2_CONN_USDHC1_DATA2	0x00000021
			IMX8QXP_USDHC1_DATA3_CONN_USDHC1_DATA3	0x00000021
		>;
	};

	/* Ethernet PHYs regulator */
	pinctrl_reg_3v3_eth0: pinctrl_reg_3v3_eth0grp {
		fsl,pins = <
			/* PHY power */
			IMX8QXP_QSPI0A_DQS_LSIO_GPIO3_IO13		0x06000021
		>;
	};

	pinctrl_reg_3v3_eth0_sleep: pinctrl_reg_3v3_eth0grp_sleep {
		fsl,pins = <
			/* PHY power (lp_config=LATCH) */
			IMX8QXP_QSPI0A_DQS_LSIO_GPIO3_IO13		0x07800021
		>;
	};

	pinctrl_reg_5v_display: reg_5v_display_grp {
		fsl,pins = <
			/* 5V regulator power enable */
			IMX8QXP_SPI3_SCK_LSIO_GPIO0_IO13		0x06000020
		>;
	};

	pinctrl_reg_5v_display_sleep: reg_5v_display_grp_sleep {
		fsl,pins = <
			/* 5V regulator power enable, latch */
			IMX8QXP_SPI3_SCK_LSIO_GPIO0_IO13		0x07800020
		>;
	};

	/* Internal I2C (MCA, Crypto chip) */
	pinctrl_lpi2c0: lpi2c0grp {
		fsl,pins = <
			IMX8QXP_MIPI_CSI0_GPIO0_00_ADMA_I2C0_SCL	0xc6000066
			IMX8QXP_MIPI_CSI0_GPIO0_01_ADMA_I2C0_SDA	0xc6000066
		>;
	};

	pinctrl_lpi2c0_gpio: lpi2c0gpiogrp {
		fsl,pins = <
			IMX8QXP_MIPI_CSI0_GPIO0_00_LSIO_GPIO3_IO08	0xc6000066
			IMX8QXP_MIPI_CSI0_GPIO0_01_LSIO_GPIO3_IO07	0xc6000066
		>;
	};

	pinctrl_mca_cc8x: mcagrp {
		fsl,pins = <
			IMX8QXP_QSPI0A_DATA0_LSIO_GPIO3_IO09	0x06000021
		>;
	};

	pinctrl_cm40_lpuart: cm40_lpuartgrp {
		fsl,pins = <
			IMX8QXP_ADC_IN2_M40_UART0_RX            0x06000020
			IMX8QXP_ADC_IN3_M40_UART0_TX            0x06000020
		>;
	};
};
